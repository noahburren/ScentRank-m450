name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: scentrank # dein Backend lebt hier
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # <- WICHTIG: komplette Git-History für Sonar/Blame

      - name: Show clone depth (debug)
        run: |
          git rev-parse --is-shallow-repository || true
          git log -1 --oneline || true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: "maven"

      - name: Build & Test (with coverage)
        run: mvn -B clean verify

      - name: Upload Surefire reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: scentrank/target/surefire-reports

      - name: Upload JaCoCo HTML
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: scentrank/target/site/jacoco

      # PR-Parameter für Sonar (nur wenn es ein PR ist)
      - name: Compute Sonar PR args
        id: sonarargs
        if: github.event_name == 'pull_request'
        run: |
          echo "args=-Dsonar.pullrequest.key=${{ github.event.pull_request.number }} -Dsonar.pullrequest.branch=${{ github.head_ref }} -Dsonar.pullrequest.base=${{ github.base_ref }}" >> "$GITHUB_OUTPUT"

      - name: SonarCloud Scan (main & PRs)
        if: github.ref_name == 'main' || github.event_name == 'pull_request'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: |
          mvn -B \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
            -Dsonar.organization=${SONAR_ORGANIZATION} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${SONAR_TOKEN} \
            ${{ steps.sonarargs.outputs.args }}
